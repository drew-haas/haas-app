{"version":3,"sources":["components/Header.js","components/Hero.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","navigationOpen","filteredBy","menuTl","TimelineMax","paused","menuBar","toggleNavigation","bind","assertThisInitialized","closeNav","openNav","filterPage","document","querySelector","classList","add","setState","play","remove","reverse","filter","gridItems","querySelectorAll","filteredItems","i","length","j","to","width","ease","Expo","easeInOut","height","staggerTo","y","opacity","easeOut","_this2","react_default","a","createElement","className","href","onClick","Component","title","classSuffix","subTitle","images","type","tags","link","map","proj","index","key","Hero","clearFilters","App","components_Header","components_Hero","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.30dad760.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {TweenMax, TimelineMax, Expo } from \"gsap/all\";\n\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n\n    // state properties\n    this.state = {\n      navigationOpen: false,\n      filteredBy: 'all'\n    };\n    \n    // menu nav items\n    this.menuTl = new TimelineMax({ paused: true });\n    this.menuBar = null;\n\n    // menu nav functions\n    this.toggleNavigation = this.toggleNavigation.bind(this);\n    this.closeNav = this.closeNav.bind(this);\n    this.openNav = this.openNav.bind(this);\n    this.filterPage = this.filterPage.bind(this);\n  }\n\n  openNav() {\n    document.querySelector('.menu').classList.add('open');\n    this.setState({ navigationOpen: true });\n    this.menuTl.play();\n  }\n\n  closeNav() {\n    document.querySelector('.menu').classList.remove('open');\n    this.setState({ navigationOpen: false });\n    this.menuTl.reverse();\n  }\n\n  toggleNavigation() {\n    if (this.state.navigationOpen) {\n      this.closeNav();\n    } else {\n      this.openNav();\n    }\n  }\n\n  filterPage(filter) {\n    // TODO: create function to display only the filtered options in the grid\n    //\n    var gridItems = document.querySelectorAll('.grid_row');\n    var filteredItems = document.querySelectorAll('.grid_type-' + filter);\n\n    for (var i = 0; i < gridItems.length; i++){\n      gridItems[i].classList.add('hidden');\n    }\n    for (var j = 0; j < filteredItems.length; j++){\n      filteredItems[j].classList.remove('hidden');\n    }\n\n    // Then Close Nav\n    this.closeNav();\n  }\n\n  componentDidMount(){\n    this.menuTl.to(document.querySelector('.menu_bar'), .5, {width: '100%', ease: Expo.easeInOut})\n               .to(document.querySelector('.menu_bar'), .5, {height: '100vh', ease: Expo.easeInOut}, '-=.1')\n               .staggerTo(document.querySelectorAll('.menu_link_container'), .8, {y: 0, opacity: 1, ease: Expo.easeOut}, .1, '-=.4');\n  }\n\n  render() {\n    return (\n      <div className=\"header_container\">\n        <header>\n          <a href=\"/\"><div className=\"logo\"><div className=\"logo-text\">Dh</div></div></a>\n          <div className=\"menu\">\n            <div className=\"menu_container\">\n              <div className=\"menu_bar\"></div>\n              <div className=\"menu_content\">\n                <ul>\n                  <li className=\"menu_link\"><span className=\"menu_link_container\" onClick={() => this.filterPage('work')}>Work</span></li>\n                  <li className=\"menu_link\"><span className=\"menu_link_container life\" onClick={() => this.filterPage('life')}>Life</span></li>\n                  <li className=\"menu_text\"><span className=\"menu_link_container\"><code>andrewfhaas@gmail.com</code></span></li>\n                </ul>\n              </div>\n            </div>\n          </div>\n          <div className=\"menu_icon\" onClick={this.toggleNavigation}>\n            <div className=\"line_container\">\n              <div className=\"line line_1\"></div>\n              <div className=\"line line_2\"></div>\n            </div>\n          </div>\n        </header>\n      </div>\n    )\n  }\n}\n\nexport default Header;","import React, { Component } from 'react';\n\nconst projects = [\n    {\n        title: 'Design Central',\n        classSuffix: 'design-central',\n        subTitle: 'An Interactive website for a product design and engineering company. Created with Drupal and custom Javascript animations and solutions.',\n        images: [],\n        type: 'work',\n        tags: ['animation', 'front-end', 'web'],\n        link: 'https://www.designcentral.com/'\n    },\n    {\n        title: 'The Laughing Cow',\n        classSuffix: 'laughing-cow',\n        subTitle: 'New and Old techniques used on this playful website for this well known dairy company.',\n        images: [],\n        type: 'work',\n        tags: ['animation', 'front-end', 'web'],\n        link: 'https://www.thelaughingcow.com/'\n    },\n    {\n        title: 'Moab',\n        classSuffix: 'moab',\n        subTitle: 'Exploring the Arches and desert walls of Moab, Utah.',\n        images: [],\n        type: 'life',\n        tags: ['photography', 'adventure', 'travels'],\n        link: 'https://www.instagram.com/p/BmLlaDSgp6d/'\n    },\n    {\n        title: 'Yosemite',\n        classSuffix: 'yosemite',\n        subTitle: 'A trip inside my favorite desktop wallpaper.',\n        images: [],\n        type: 'life',\n        tags: ['photography', 'adventure', 'travels'],\n        link: 'https://www.instagram.com/p/BmLlaDSgp6d/'\n    }\n];\n\nconst gridItems = projects.map((proj, index) => \n    <div className={'grid_row grid_row-' + proj.classSuffix + ' grid_type-' + proj.type} key={index}>\n        <div className=\"grid_item\">{proj.title}</div>\n    </div>\n);\n\nclass Hero extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    clearFilters() {\n        \n    }\n\n    render() {\n        return (\n            <div className=\"heroSection\">\n                <div className=\"bgtext\">DrewHaas</div>\n                <div className=\"grid_container\">{gridItems}</div>\n                <div className=\"rightAccentText\" onClick={this.clearFilters}>Clear</div>\n                {/* <p>Welcome. My name is Drew Haas and I'm a Web Developer from Columbus, Ohio currently living in San Francisco.</p> */}\n            </div>\n        );\n    }\n}\n\nexport default Hero;","import React, { Component } from 'react';\n//import logo from './logo.svg';\nimport Header from './components/Header';\nimport Hero from './components/Hero';\nimport './stylesheets/Main.scss';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header/>\n        <Hero/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}